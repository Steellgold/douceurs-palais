{% extends 'base.html.twig' %}

{% block title %}Validation de commande{% endblock %}

{% block body %}
  <div class="bg-[#FEFDFB] py-10 px-4 md:px-6 lg:px-8">
    <div class="max-w-5xl mx-auto">
      <div class="mb-8">
        <h1 class="text-3xl font-playfair text-center">Validation de commande</h1>
        <p class="text-gray-600 text-center mt-2">Complétez vos informations pour finaliser votre commande</p>
      </div>

      {% for label, messages in app.flashes %}
        {% for message in messages %}
          <div class="mb-6 p-4 rounded-md {% if label == 'success' %}bg-green-100 border border-green-400 text-green-700{% elseif label == 'info' %}bg-blue-100 border border-blue-400 text-blue-700{% else %}bg-red-100 border border-red-400 text-red-700{% endif %}">
            <p>{{ message }}</p>
          </div>
        {% endfor %}
      {% endfor %}

      <div class="flex items-center justify-between mb-8 max-w-2xl mx-auto">
        <div class="flex flex-col items-center">
          <div class="w-10 h-10 flex items-center justify-center rounded-full bg-[#EDA239] text-white font-medium">
            1
          </div>
          <span class="text-xs mt-1">Panier</span>
        </div>

        <div class="flex-1 h-1 mx-2 bg-[#EDA239]"></div>

        <div class="flex flex-col items-center">
          <div class="w-10 h-10 flex items-center justify-center rounded-full bg-[#EDA239] text-white font-medium">
            2
          </div>
          <span class="text-xs mt-1">Livraison</span>
        </div>

        <div class="flex-1 h-1 mx-2 bg-gray-200"></div>

        <div class="flex flex-col items-center">
          <div class="w-10 h-10 flex items-center justify-center rounded-full bg-gray-200 text-gray-500 font-medium">
            3
          </div>
          <span class="text-xs mt-1">Paiement</span>
        </div>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <div class="lg:col-span-2">
          <div class="bg-white shadow-md rounded-lg overflow-hidden border border-gray-100 mb-6">
            <div class="px-6 py-4 bg-gray-50 border-b border-gray-100">
              <h2 class="text-lg font-playfair">Récapitulatif de commande</h2>
            </div>

            <div class="p-6">
              <div class="space-y-4">
                {% for item in cart.items %}
                  <div class="flex items-center justify-between pb-4 border-b border-gray-100">
                    <div class="flex items-center">
                      {% if item.product.mainImage %}
                        <img src="{{ item.product.mainImage }}" alt="{{ item.product.name }}" class="w-16 h-16 object-cover rounded-md mr-4">
                      {% else %}
                        <div class="w-16 h-16 bg-gray-100 rounded-md flex items-center justify-center mr-4">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                          </svg>
                        </div>
                      {% endif %}
                      <div>
                        <h3 class="text-sm font-medium">{{ item.product.name }}</h3>
                        <p class="text-xs text-gray-500">{{ item.product.bakery.name }}</p>
                        <p class="text-xs text-gray-500">Quantité: {{ item.quantity }}</p>
                      </div>
                    </div>
                    <div class="text-right">
                      <p class="text-sm font-medium">{{ (item.product.price * item.quantity)|number_format(2, ',', ' ') }} €</p>
                      <p class="text-xs text-gray-500">{{ item.product.price|number_format(2, ',', ' ') }} € / unité</p>
                    </div>
                  </div>
                {% endfor %}
              </div>

              <div class="mt-6 space-y-2">
                <div class="flex justify-between">
                  <span class="text-sm text-gray-600">Sous-total</span>
                  <span class="text-sm font-medium">{{ cart.totalPrice|number_format(2, ',', ' ') }} €</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm text-gray-600">Livraison</span>
                  <span class="text-sm font-medium">Gratuite</span>
                </div>
                <div class="flex justify-between pt-4 border-t border-gray-100">
                  <span class="text-base font-medium">Total</span>
                  <span class="text-base font-medium">{{ cart.totalPrice|number_format(2, ',', ' ') }} €</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="lg:col-span-1">
          <div class="bg-white shadow-md rounded-lg overflow-hidden border border-gray-100">
            <div class="px-6 py-4 bg-gray-50 border-b border-gray-100">
              <h2 class="text-lg font-playfair">Informations de livraison</h2>
            </div>

            <div class="p-6">
              {{ form_start(form, {'attr': {'class': 'space-y-4'}}) }}
              <div>
                <label for="{{ form.shipping_address.vars.id }}" class="block text-sm font-medium text-gray-700 mb-1">
                  {{ form.shipping_address.vars.label }}
                </label>
                {{ form_widget(form.shipping_address) }}
                <div class="text-red-500 text-xs mt-1">
                  {{ form_errors(form.shipping_address) }}
                </div>

                {% if app.user.addresses|length == 0 %}
                  <div class="mt-2">
                    <a href="{{ path('app_account_address_new') }}" class="text-sm text-[#EDA239] hover:underline">
                      + Ajouter une nouvelle adresse
                    </a>
                  </div>
                {% endif %}
              </div>

              <div class="flex items-center mt-4">
                {{ form_widget(form.different_billing_address) }}
                <label for="{{ form.different_billing_address.vars.id }}" class="ml-2 block text-sm text-gray-700">
                  {{ form.different_billing_address.vars.label }}
                </label>
              </div>

              <div id="billing-address-container" class="hidden mt-4">
                <label for="{{ form.billing_address.vars.id }}" class="block text-sm font-medium text-gray-700 mb-1">
                  {{ form.billing_address.vars.label }}
                </label>
                {{ form_widget(form.billing_address) }}
                <div class="text-red-500 text-xs mt-1">
                  {{ form_errors(form.billing_address) }}
                </div>
              </div>

              <div class="flex items-center mt-6">
                {{ form_widget(form.terms) }}
                <label for="{{ form.terms.vars.id }}" class="ml-2 block text-sm text-gray-700">
                  {{ form.terms.vars.label }}
                </label>
              </div>
              <div class="text-red-500 text-xs mt-1">
                {{ form_errors(form.terms) }}
              </div>

              <div class="pt-6">
                <button type="submit" class="w-full flex justify-center py-3 px-4 border border-transparent rounded-md shadow-sm text-black bg-[#EDA239] hover:bg-[#EFAF7D] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#EDA239]">
                  Procéder au paiement
                </button>
              </div>
              {{ form_end(form) }}
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
{% endblock %}

{% block javascripts %}
  {{ parent() }}
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const differentBillingCheckbox = document.getElementById('{{ form.different_billing_address.vars.id }}');
      const billingAddressContainer = document.getElementById('billing-address-container');

      if (differentBillingCheckbox.checked) billingAddressContainer.classList.remove('hidden');

      differentBillingCheckbox.addEventListener('change', function() {
        if (this.checked) {
          billingAddressContainer.classList.remove('hidden');
        } else {
          billingAddressContainer.classList.add('hidden');
        }
      });
    });
  </script>
{% endblock %}